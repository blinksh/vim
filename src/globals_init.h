Rows = 24L;
Columns = 80;	/* nr of columns in the screen */
ScreenLines = NULL;
ScreenAttrs = NULL;
LineOffset = NULL;
LineWraps = NULL;	/* line wraps to next line */
ScreenLinesUC = NULL;	/* decoded UTF-8 characters */
Screen_mco = 0;		/* value of p_mco used when */
ScreenLines2 = NULL;
TabPageIdxs = NULL;
popup_mask = NULL;
popup_mask_next = NULL;
popup_transparent = NULL;
popup_mask_refresh = TRUE;
popup_mask_tab = NULL;
screen_zindex = 0;
screen_Rows = 0;	    /* actual size of ScreenLines[] */
screen_Columns = 0;   /* actual size of ScreenLines[] */
mod_mask = 0x0;		/* current key modifiers */
cmdline_row = 0;
redraw_cmdline = FALSE;	// cmdline must be redrawn
redraw_mode = FALSE;	// mode must be redrawn
clear_cmdline = FALSE;	// cmdline must be cleared
mode_displayed = FALSE;	// mode is being displayed
no_win_do_lines_ins = FALSE; // don't insert lines
cmdline_star = FALSE;	// cmdline is crypted
exec_from_reg = FALSE;	/* executing register */
screen_cleared = FALSE;	/* screen has been cleared */
dollar_vcol = -1;
compl_length = 0;
compl_cont_status = 0;
cmdmsg_rl = FALSE;    /* cmdline is drawn right to left */
msg_col = 0;
msg_row = 0;
msg_scrolled = 0;	/* Number of screen lines that windows have */
msg_scrolled_ign = FALSE;
keep_msg = NULL;	    /* msg to be shown after redraw */
keep_msg_attr = 0;    /* highlight attr for keep_msg */
keep_msg_more = FALSE; /* keep_msg was set by msgmore() */
need_fileinfo = FALSE;/* do fileinfo() after redraw */
msg_scroll = FALSE;   /* msg_start() will scroll */
msg_didout = FALSE;   /* msg_outstr() was used in line */
msg_didany = FALSE;   /* msg_outstr() was used at all */
msg_nowait = FALSE;   /* don't wait for this msg */
emsg_off = 0;	    /* don't display errors for now, */
info_message = FALSE; /* printing informative message */
msg_hist_off = FALSE; /* don't add messages to history */
#ifdef FEAT_EVAL
need_clr_eos = FALSE; /* need to clear text before */
emsg_skip = 0;	    /* don't display errors for */
emsg_severe = FALSE;   /* use message of next of several */
did_endif = FALSE;    /* just had ":endif" */
// vimvardict = 0;		    /* Dictionary with v: variables */
// globvardict = 0;		    /* Dictionary with g: variables */
#endif
did_emsg = 0;		    /* set by emsg() when the message is displayed or thrown */
#ifdef FEAT_EVAL
called_vim_beep = 0;	    /* set if vim_beep() is called */
did_uncaught_emsg = 0;	    /* emsg() was called and did not cause an exception */
#endif
did_emsg_syntax = 0;	    /* did_emsg set because of a syntax error */
called_emsg = 0;		    /* always set by emsg() */
ex_exitval = 0;	    /* exit value for ex mode */
emsg_on_display = FALSE;	/* there is an error message */
rc_did_emsg = FALSE;  /* vim_regcomp() called emsg() */
no_wait_return = 0;   /* don't wait for return for now */
need_wait_return = 0; /* need to wait for return later */
did_wait_return = FALSE;	/* wait_return() was used and */
need_maketitle = TRUE; /* call maketitle() soon */
quit_more = FALSE;    /* 'q' hit at "--more--" msg */
newline_on_exit = FALSE;	/* did msg in altern. screen */
intr_char = 0;	    /* extra interrupt character */
ex_keep_indent = FALSE; /* getexmodeline(): keep indent */
vgetc_busy = 0;	    /* when inside vgetc() then > 0 */
didset_vim = FALSE;   /* did set $VIM ourselves */
didset_vimruntime = FALSE;   /* idem for $VIMRUNTIME */
lines_left = -1;	    /* lines left for listing */
msg_no_more = FALSE;  /* don't use more prompt, truncate */
sourcing_name  = NULL;/* name of error message source */
sourcing_lnum = 0;    /* line number of the source file */
ex_nesting_level = 0;	/* nesting level */
debug_break_level = -1;	/* break below this level */
debug_did_msg = FALSE;	/* did "debug mode" message */
debug_tick = 0;		/* breakpoint change count */
debug_backtrace_level = 0; /* breakpoint backtrace level */
// script_items = {0 COMMA 0 COMMA sizeof(scriptitem_T) COMMA 4 COMMA NULL};
current_exception = NULL;
did_throw = FALSE;
need_rethrow = FALSE;
check_cstack = FALSE;
trylevel = 0;
force_abort = FALSE;
msg_list = NULL;
suppress_errthrow = FALSE;
caught_stack = NULL;
may_garbage_collect = FALSE;
want_garbage_collect = FALSE;
garbage_collect_at_exit = FALSE;
// current_sctx = {0 COMMA 0 COMMA 0 COMMA 0};
did_source_packages = FALSE;
hash_removed = NUL;
scroll_region = FALSE; /* term supports scroll region */
t_colors = 0;	    /* int value of T_CCO */
include_none = 0;	// when 1 include "None"
include_default = 0;	// when 1 include "default"
include_link = 0;	// when 2 include "link" and "clear"
highlight_match = FALSE;	// show search match pos
search_match_lines = 0;		// lines of of matched string
search_match_endcol = 0;		// col nr of match end
search_first_line = 0;	  // for :{FIRST},{last}s/pat
search_last_line = MAXLNUM; // for :{first},{LAST}s/pat
no_smartcase = FALSE;	/* don't use 'smartcase' once */
need_check_timestamps = FALSE; /* need to check file */
did_check_timestamps = FALSE; /* did check timestamps */
no_check_timestamps = 0;	/* Don't check timestamps */
skip_term_loop = FALSE;
// use_gvimrc = NULL;	/* "-U" cmdline argument */
cterm_normal_fg_color = 0;
cterm_normal_fg_bold = 0;
cterm_normal_bg_color = 0;
cterm_normal_fg_gui_color = INVALCOLOR;
cterm_normal_bg_gui_color = INVALCOLOR;
is_mac_terminal = FALSE;  /* recognized Terminal.app */
autocmd_busy = FALSE;	/* Is apply_autocmds() busy? */
autocmd_no_enter = FALSE; /* *Enter autocmds disabled */
autocmd_no_leave = FALSE; /* *Leave autocmds disabled */
did_filetype = FALSE;	/* FileType event found */
au_did_filetype = FALSE;
keep_filetype = FALSE;	/* value for did_filetype when */
// au_new_curbuf = {NULL COMMA 0 COMMA 0};
au_pending_free_buf = NULL;
au_pending_free_win = NULL;
mouse_row = 0;
mouse_col = 0;
mouse_past_bottom = FALSE;/* mouse below last line */
mouse_past_eol = FALSE;	/* mouse right of line */
mouse_dragging = 0;	/* extending Visual area with */
WantQueryMouse = FALSE;
// need_mouse_correct = FALSE;
// drag_status_line = FALSE;	/* dragging the status line */
// postponed_mouseshape = FALSE; /* postponed updating the */
// drag_sep_line = FALSE;	/* dragging vert separator */
diff_context = 6;		/* context for folds */
diff_foldcolumn = 2;	/* 'foldcolumn' for diff mode */
diff_need_scrollbind = FALSE;
root_menu = NULL;
sys_menu = FALSE;
updating_screen = FALSE;
// current_menu = NULL;
// force_menu_update = FALSE;
// current_scrollbar;
// scrollbar_value;
// found_reverse_arg = FALSE;
// font_argument = NULL;
// hold_gui_events = 0;
// new_pixel_width = 0;
// new_pixel_height = 0;
// gui_win_x = -1;
// gui_win_y = -1;
clip_unnamed = 0; /* above two values or'ed */
clip_autoselect_star = FALSE;
clip_autoselect_plus = FALSE;
clip_autoselectml = FALSE;
clip_html = FALSE;
clip_exclude_prog = NULL;
clip_unnamed_saved = 0;
firstwin = NULL;		/* first window */
lastwin = NULL;		/* last window */
prevwin = NULL;	/* previous window */
curwin = NULL;	/* currently active window */
aucmd_win = NULL;	/* window used in aucmd_prepbuf() */
aucmd_win_used = FALSE;	/* aucmd_win is being used */
first_popupwin = NULL;		// first global popup window
popup_dragwin = NULL;	// popup window being dragged
popup_visible = FALSE;
text_prop_frozen = 0;
topframe = NULL;	/* top of the window frame tree */
first_tabpage = NULL;
curtab = NULL;
redraw_tabline = FALSE;  /* need to redraw tabline */
firstbuf = NULL;	/* first buffer */
lastbuf = NULL;	/* last buffer */
curbuf = NULL;	/* currently active buffer */
mf_dont_release = FALSE;	/* don't release blocks */
max_alist_id = 0;	    /* the previous argument list id */
arg_had_last = FALSE; /* accessed last file in */
ru_col = 0;		/* column for ruler */
#ifdef FEAT_STL_OPT
ru_wid = 0;		/* 'rulerfmt' width of ruler when non-zero */
#endif
sc_col = 0;		/* column for shown command */
vim_tempdir = NULL; /* Name of Vim's own temp dir. */
starting = NO_SCREEN;
exiting = FALSE;
really_exiting = FALSE;
v_dying = 0; /* internal value of v:dying */
stdout_isatty = TRUE;	/* is stdout a terminal? */
test_autochdir = FALSE;
entered_free_all_mem = FALSE;
full_screen = FALSE;
restricted = FALSE;
secure = FALSE;
textlock = 0;
curbuf_lock = 0;
allbuf_lock = 0;
sandbox = 0;
silent_mode = FALSE;
VIsual_active = FALSE;
VIsual_select = FALSE;
VIsual_mode = 'v';
redo_VIsual_busy = FALSE;
where_paste_started = (pos_T) {0, 0, 0};
did_ai = FALSE;
ai_col = 0;
end_comment_pending = NUL;
did_syncbind = FALSE;
did_si = FALSE;
can_si = FALSE;
can_si_back = FALSE;
saved_cursor = (pos_T) {0, 0, 0}; 
orig_line_count = 0;  /* Line count when "gR" started */
vr_lines_changed = 0; /* #Lines changed by "gR" so far */
enc_dbcs = 0;		/* One of DBCS_xxx values if */
enc_unicode = 0;	/* 2: UCS-2 or UTF-16, 4: UCS-4 */
enc_utf8 = FALSE;		/* UTF-8 encoded Unicode */
enc_latin1like = TRUE;	/* 'encoding' is latin1 comp. */
// enc_codepage = -1;
// enc_latin9 = FALSE;	/* 'encoding' is latin9 */
has_mbyte = 0;		/* any multi-byte encoding */
mb_ptr2len = latin_ptr2len;
mb_ptr2len_len = latin_ptr2len_len;
mb_char2len = mb_char2len;
mb_char2bytes = latin_char2bytes;
mb_ptr2cells = latin_ptr2cells;
mb_ptr2cells_len = latin_ptr2cells_len;
mb_char2cells = latin_char2cells;
mb_off2cells = latin_off2cells;
mb_ptr2char = latin_ptr2char;
mb_head_off = latin_head_off;
State = NORMAL;	/* This is the current state of the */
debug_mode = FALSE;
finish_op = FALSE;/* TRUE while an operator is pending */
opcount = 0;	/* count for pending operator */
motion_force = 0; // motion force for pending operator
exmode_active = 0;	/* zero, EXMODE_NORMAL or EXMODE_VIM */
ex_no_reprint = FALSE; /* no need to print after z or p */
reg_recording = 0;	/* register for recording  or zero */
reg_executing = 0;	/* register being executed or zero */
no_mapping = FALSE;	/* currently no mapping allowed */
no_zero_mapping = 0;	/* mapping zero not allowed */
allow_keys = FALSE;	/* allow key codes when no_mapping */
no_u_sync = 0;		/* Don't call u_sync() */
u_sync_once = 0;	/* Call u_sync() once when evaluating */
restart_edit = 0;	/* call edit when next cmd finished */
ins_at_eol = FALSE; /* put cursor after eol when */
edit_submode = NULL; /* msg for CTRL-X submode */
edit_submode_pre = NULL; /* prepended to edit_submode */
edit_submode_extra = NULL;/* appended to edit_submode */
no_abbr = TRUE;	/* TRUE when no abbreviations loaded */
mapped_ctrl_c = FALSE; /* modes where CTRL-C is mapped */
ctrl_c_interrupts = TRUE;	/* CTRL-C sets got_int */
msg_silent = 0;	/* don't print messages */
emsg_silent = 0;	/* don't print error messages */
emsg_noredir = 0;	/* don't redirect error messages */
cmd_silent = FALSE; /* don't echo the command line */
swap_exists_action = SEA_NONE;
swap_exists_did_quit = FALSE;
RedrawingDisabled = 0;
readonlymode = FALSE; /* Set to TRUE for "view" */
recoverymode = FALSE; /* Set to TRUE for "-r" option */
ex_normal_busy = 0; /* recursiveness of ex_normal() */
ex_normal_lock = 0; /* forbid use of ex_normal() */
ignore_script = FALSE;  /* ignore script input */
maptick = 0;	/* tick for each non-mapped char */
must_redraw = 0;	    /* type of redraw necessary */
skip_redraw = FALSE;  /* skip redraw once */
do_redraw = FALSE;    /* extra redraw once */
need_highlight_changed = TRUE;
curscript = 0;	    /* index in scriptin[] */
scriptout  = NULL;   /* stream to write script to */
// read_cmd_fd = 0;	    /* fd to read commands from */
got_int = FALSE; /* set to TRUE when interrupt */
termcap_active = FALSE;	/* set by starttermcap() */
cur_tmode = TMODE_COOK;	/* input terminal mode */
bangredo = FALSE;	    /* set to TRUE with ! command */
reg_do_extmatch = 0;  /* Used when compiling regexp: */
re_extmatch_in = NULL; /* Used by vim_regexec(): */
re_extmatch_out = NULL; /* Set by vim_regexec() */
did_outofmem_msg = FALSE;
did_swapwrite_msg = FALSE;
undo_off = FALSE;	    /* undo switched off for now */
global_busy = 0;	    /* set when :global is executing */
listcmd_busy = FALSE; /* set when :argdo, :windo or */
need_start_insertmode = FALSE;
last_cmdline = NULL; /* last command line (for ":) */
repeat_cmdline = NULL; /* command line for "." */
new_last_cmdline = NULL;	/* new value for last_cmdline */
autocmd_fname = NULL; /* fname for <afile> on cmdline */
autocmd_bufnr = 0;     /* fnum for <abuf> on cmdline */
char_u	*autocmd_match = NULL; /* name for <amatch> on cmdline */
did_cursorhold = FALSE; /* set when CursorHold t'gerd */
postponed_split = 0;  /* for CTRL-W CTRL-] command */
postponed_split_flags = 0;  /* args for win_split() */
postponed_split_tab = 0;  /* cmdmod.tab */
g_do_tagpreview = 0;  // for tag preview commands:
g_tag_at_cursor = FALSE; // whether the tag command comes
replace_offset = 0;   /* offset for replace_push() */
char_u	*escape_chars = (char_u *)" \t\\\"|";
keep_help_flag = FALSE; /* doing :ta from help file */
char_u	*empty_option = (char_u *)"";
redir_off = FALSE;	/* no redirection for a moment */
redir_fd = NULL;	/* message redirection file */
redir_reg = 0;	/* message redirection register */
redir_vname = 0;	/* message redirection variable */
redir_execute = 0;	/* execute() redirection */
save_p_ls = -1;	/* Save 'laststatus' setting */
save_p_wmh = -1;	/* Save 'winminheight' setting */
wild_menu_showing = 0;
globaldir = NULL;
lcs_eol = '$';
lcs_ext = NUL;
lcs_prec = NUL;
lcs_nbsp = NUL;
lcs_space = NUL;
lcs_tab1 = NUL;
lcs_tab2 = NUL;
lcs_tab3 = NUL;
lcs_trail = NUL;
lcs_conceal = ' ';
fill_stl = ' ';
fill_stlnc = ' ';
fill_vert = ' ';
fill_fold = '-';
fill_diff = '-';
disable_fold_update = 0;
km_stopsel = FALSE;
km_startsel = FALSE;
cedit_key = -1;	/* key value of 'cedit' option */
cmdwin_type = 0;	/* type of cmdline window or 0 */
cmdwin_result = 0; /* result of cmdline window or 0 */
     stl_syntax = 0;
no_hlsearch = FALSE;
// balloonEval = NULL;
// balloonEvalForTerm = FALSE;
// bevalServers = 0;
// xterm_display = NULL;
// xterm_display_allocated = FALSE;
// xterm_dpy = NULL;
// app_context = (XtAppContext)NULL;
// gtk_socket_id = 0;
// echo_wid_arg = FALSE;	/* --echo-wid argument */
// win_socket_id = 0;
typebuf_was_filled = FALSE; /* received text from client */
// serverName = NULL;	/* name of the server */
// commWindow = None;
// clientWindow = None;
// commProperty = None;
// serverDelayedStartName = NULL;
// clientWindow = 0;
term_is_xterm = FALSE;	/* xterm-like 'term' */
virtual_op = MAYBE;
display_tick = 0;
spell_redraw_lnum = 0;
need_cursor_line_redraw = FALSE;
netbeansArg = NULL;	/* the -nb[:host:port:passwd] arg */
netbeansFireChanges = 1; /* send buffer changes if != 0 */
netbeansForcedQuit = 0;/* don't write modified files */
netbeansReadFile = 1;	/* OK to read from disk if != 0 */
netbeansSuppressNoLines = 0; /* skip "No lines in buffer" */
// disallow_gui	= FALSE;
// xsmp_icefd = -1;   /* The actual connection */
time_fd = NULL;  /* where to write startup timing */
alloc_fail_id = aid_none;
alloc_fail_countdown = -1;
alloc_fail_repeat = 0;
disable_char_avail_for_testing = FALSE;
disable_redraw_for_testing = FALSE;
ignore_redraw_flag_for_testing = FALSE;
nfa_fail_for_testing = FALSE;
no_query_mouse_for_testing = FALSE;
in_free_unref_items = FALSE;
did_add_timer = FALSE;
timer_busy = 0;   /* when timer is inside vgetc() then > 0 */
// bevalexpr_due_set = FALSE;
time_for_testing = 0;
did_echo_string_emsg = FALSE;
eval_lavars_used = NULL;
// ctrl_break_was_pressed = FALSE;
// g_hinst = NULL;

